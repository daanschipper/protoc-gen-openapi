syntax = "proto3";

package has_unused_types_googleapi_gnostic_required;

import "google/api/annotations.proto";
import "gnostic/openapi/v3/annotations.proto";

service SomeOtherServiceName {
  rpc PatchMethod(PatchRequest) returns (PatchReply) {
    option (google.api.http) = {
      patch: "/v1/patchmethod/{id}"
      body: "*"
    };
  }
  rpc GetPayment(GetRequest) returns (GetReply) {
    option (google.api.http) = {
      get: "/v1/get/{id}"
    };
  }
}

message GetRequest {
  string id = 1;
}

message GetReply {
  string message = 1;
}

message PatchRequest {
  option (gnostic.openapi.v3.schema) = {
    title: "Patch Request";
    required: ["id"];
  };
  string id = 1;
  string name = 2;
}

message PatchReply {
  string message = 1;
}
